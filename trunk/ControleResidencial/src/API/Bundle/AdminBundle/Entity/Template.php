ado.‹O XML '{2}' '{3}:{4}' n√£o cont√©m o atributo esperado '{0}:{1}'. O desserializador n√£o sabe que tipo desserializar. Verifique se o tipo que est√° serializado tem o mesmo contrato do tipo que est√° sendo desserializado.ÍO tipo '{0}' n√£o pode herdar de um tipo que n√£o est√° marcado com DataContractAttribute ou SerializableAttribute. Considere marcar o tipo base '{1}' com DataContractAttribute ou SerializableAttribute ou remov√™-los do tipo derivado.RUm de seus tipos b√°sicos, '{0}' no espa√ßo para nome '{1}' n√£o √© ISerializable.¥O espa√ßo para nome CLR {2}' j√° foi mapeado para o espa√ßo para nome de contrato de dados '{0}'. Ele n√£o pode ser mapeado para outro espa√ßo para nome de contrato de dados '{1}'.NO Retorno de Chamada de Serializa√ß√£o '{1}' no tipo '{0}' deve retornar void.gO Retorno de Chamada de Serializa√ß√£o '{1}' no tipo '{0}' deve ter um √∫nico par√¢metro do tipo '{2}'.QO M√©todo Virtual '{0}' do tipo '{1}' n√£o pode ser marcado com o atributo '{2}'.gOcorreu um erro interno. Os dados s√≥ podem ser armazenados em ArgBuilder ou LocalBuilder. Obtido: {0}.qUm nome exclusivo n√£o pode ser computado para '{0}' porque j√° existem tipos de Int32.MaxValue com o mesmo nome.°O tipo com o nome de con